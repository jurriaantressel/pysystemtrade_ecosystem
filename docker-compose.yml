services:

  mongo_db:
      container_name: mongo_db${NAME_SUFFIX}
      image: mongo
      restart: no
      volumes:
        - mongo_db:/data/db
        - mongo_config:/data/configdb
      networks:
        trading_net:
          ipv4_address: ${MONGO_DB_IPV4_ADDRESS}
      logging:
        options:
          max-size: "5m"
          max-file: "3"

  db_backup:
      image: alpine
      container_name: db_backup${NAME_SUFFIX}
      volumes:
        - mongo_db:/data/db
        - mongo_config:/data/configdb
        - ${DB_BACKUP_PATH}:/backup
      command: sh -c "tar -zcvf /backup/mongo.tar.gz /data/"
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  db_restore:
      image: alpine
      profiles: ["restore"]
      container_name: db_restore${NAME_SUFFIX}
      volumes:
        - mongo_db:/data/db
        - mongo_config:/data/configdb
        - ${DB_BACKUP_PATH}:/backup
      command: sh -c "cd /data/ && tar -zxvf /backup/mongo.tar.gz --strip 1"
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  ib_gateway:
      container_name: ib_gateway${NAME_SUFFIX}
      image: ghcr.io/extrange/ibkr:stable
      restart: no
      ports:
        - "6082:6080"
        - "${IB_GATEWAY_PORT}:8888"
      environment:
        USERNAME: ${IBKR_USER_ID}
        PASSWORD: ${IBKR_PASSWORD}
        GATEWAY_OR_TWS: ${IB_GATEWAY_PLATFORM}
        TWOFA_TIMEOUT_ACTION: "restart"
        IBC_TradingMode: ${IBC_TRADING_MODE}
        IBC_ReadOnlyApi: no
        IBC_SecondFactorDevice: "IB Key"
        IBC_ReloginAfterSecondFactorAuthenticationTimeout: yes
        IBC_AcceptNonBrokerageAccountWarning: yes
        IBC_LogStructureScope: known
        IBC_LogStructureWhen: openclose
        IBC_ExistingSessionDetectedAction: ${IBC_EXISTING_SESSION_DETECTED_ACTION}
        IBC_AutoRestartTime: ${IBC_AUTO_RESTART_TIME}
        IBC_AcceptIncomingConnectionAction: ${IBC_ACCEPT_INCOMING_CONNECTION_ACTION}
        IBC_ConfirmCryptoCurrencyOrders: transmit
      volumes:
        - gateway_jts:/root/Jts
      networks:
        trading_net:
          ipv4_address: ${IB_GATEWAY_IPV4_ADDRESS}
      logging:
        options:
          max-size: "1m"
          max-file: "2"
      ulimits:
        nofile:
          soft: 10000
          hard: 10000

  builder_handler:
      container_name: builder_handler${NAME_SUFFIX}
      image: pysystemtrade
      pull_policy: never
      build:
        context: ./pysystemtrade
        dockerfile: ./Dockerfile
        args:
          SYSTEM_REPO_NAME: ${SYSTEM_REPO_NAME}
          SYSTEM_REPO_OWNER: ${SYSTEM_REPO_OWNER}
          SYSTEM_REPO_ACCESS_TOKEN: ${SYSTEM_REPO_ACCESS_TOKEN}
          CONFIG_REPO_NAME: ${CONFIG_REPO_NAME}
          CONFIG_REPO_OWNER: ${CONFIG_REPO_OWNER}
          CONFIG_REPO_ACCESS_TOKEN: ${CONFIG_REPO_ACCESS_TOKEN}
          REPORT_REPO_NAME: ${REPORT_REPO_NAME}
          REPORT_REPO_OWNER: ${REPORT_REPO_OWNER}
          REPORT_REPO_ACCESS_TOKEN: ${REPORT_REPO_ACCESS_TOKEN}
          IB_GATEWAY_IPV4_ADDRESS: ${IB_GATEWAY_IPV4_ADDRESS}
          IB_GATEWAY_PORT: ${IB_GATEWAY_PORT}
          IB_GATEWAY_OFFSET: ${IB_GATEWAY_OFFSET}
          IBKR_ACCOUNT: ${IBKR_ACCOUNT}
          PARQUET_STORE: ${PARQUET_STORE}
          MONGO_DB_HOST: ${MONGO_DB_HOST}
          MONGO_DB_DATABASE: ${MONGO_DB_DATABASE}
          MONGO_DB_PORT: ${MONGO_DB_PORT}
          EMAIL_USER_ID: ${EMAIL_USER_ID}
          EMAIL_PASSWORD: ${EMAIL_PASSWORD}
          EMAIL_SERVER: ${EMAIL_SERVER}
          EMAIL_PORT: ${EMAIL_PORT}
          EMAIL_TO: ${EMAIL_TO}
      restart: no
      entrypoint: ["/bin/sh", "-c", "echo 'Exiting immediately by design: service only provides image build.'; exit 0"]
      logging:
        options:
          max-size: "100k"
          max-file: "1"

  stack_handler:
      image: pysystemtrade
      container_name: stack_handler${NAME_SUFFIX}
      restart: no
      environment:
        TZ: ${TZ}
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
      command: ["/bin/bash", "-c", "command_scripts/stack_handler_commands.bash"]
      depends_on:
        - builder_handler
        - ib_gateway
        - mongo_db
      volumes:
        - ./logs/stack_handler:/home/logs
        - parquet_store:$PARQUET_STORE
      networks:
        trading_net:
          ipv4_address: ${STACK_HANDLER_IPV4_ADDRESS}
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  price_updates:
      image: pysystemtrade
      container_name: price_updates${NAME_SUFFIX}
      restart: no
      environment:
        TZ: ${TZ}
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
      command: ["/bin/bash", "-c", "command_scripts/daily_prices_updates_commands.bash"]
      depends_on:
        - builder_handler
        - ib_gateway
        - mongo_db
      volumes:
        - ./logs/price_updates:/home/logs
      networks:
        trading_net:
          ipv4_address: ${PRICE_UPDATES_IPV4_ADDRESS}
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  capital_update:
      image: pysystemtrade
      container_name: capital_update${NAME_SUFFIX}
      restart: no
      environment:
        TZ: ${TZ}
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
      command: ["/bin/bash", "-c", "command_scripts/capital_update_commands.bash"]
      depends_on:
        - builder_handler
        - ib_gateway
        - mongo_db
      volumes:
        - ./logs/capital_update:/home/logs
      networks:
        trading_net:
          ipv4_address: ${CAPITAL_UPDATE_IPV4_ADDRESS}
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  cleaner:
      image: pysystemtrade
      container_name: cleaner${NAME_SUFFIX}
      restart: no
      environment:
        TZ: ${TZ}
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
      command: ["/bin/bash", "-c", "command_scripts/cleaner_commands.bash"]
      depends_on:
        - builder_handler
        - mongo_db
      networks:
        trading_net:
          ipv4_address: ${CLEANER_IPV4_ADDRESS}
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  daily_processes:
      image: pysystemtrade
      container_name: daily_processes${NAME_SUFFIX}
      environment:
        TZ: ${TZ}
        IPV4_NETWORK_PART: ${IPV4_NETWORK_PART}
      command: ["/bin/bash", "-c", "command_scripts/daily_processes_commands.bash"]
      depends_on:
        - builder_handler
        - ib_gateway
        - mongo_db
      volumes:
        - ./reports:/home/reports
        - ./backtests:/home/backtests
        - ./logs/daily_processes:/home/logs
      networks:
        trading_net:
          ipv4_address: ${DAILY_PROCESSES_IPV4_ADDRESS}
      stdin_open: true
      tty: true
      init: true
      logging:
        options:
          max-size: "10m"
          max-file: "3"

  jupyter:
      image: pysystemtrade_jupyter
      build:
        context: jupyter
        dockerfile: ./Dockerfile
        args:
          SYSTEM_REPO_NAME: ${SYSTEM_REPO_NAME}
          SYSTEM_REPO_OWNER: ${SYSTEM_REPO_OWNER}
          SYSTEM_REPO_ACCESS_TOKEN: ${SYSTEM_REPO_ACCESS_TOKEN}
          CONFIG_REPO_NAME: ${CONFIG_REPO_NAME}
          CONFIG_REPO_OWNER: ${CONFIG_REPO_OWNER}
          CONFIG_REPO_ACCESS_TOKEN: ${CONFIG_REPO_ACCESS_TOKEN}
          REPORT_REPO_NAME: ${REPORT_REPO_NAME}
          REPORT_REPO_OWNER: ${REPORT_REPO_OWNER}
          REPORT_REPO_ACCESS_TOKEN: ${REPORT_REPO_ACCESS_TOKEN}
          IB_GATEWAY_IPV4_ADDRESS: ${IB_GATEWAY_IPV4_ADDRESS}
          IB_GATEWAY_PORT: ${IB_GATEWAY_PORT}
          IB_GATEWAY_OFFSET: ${IB_GATEWAY_OFFSET}
          IBKR_ACCOUNT: ${IBKR_ACCOUNT}
          PARQUET_STORE: ${PARQUET_STORE}
          MONGO_DB_HOST: ${MONGO_DB_HOST}
          MONGO_DB_DATABASE: ${MONGO_DB_DATABASE}
          MONGO_DB_PORT: ${MONGO_DB_PORT}
          EMAIL_USER_ID: ${EMAIL_USER_ID}
          EMAIL_PASSWORD: ${EMAIL_PASSWORD}
          EMAIL_SERVER: ${EMAIL_SERVER}
          EMAIL_PORT: ${EMAIL_PORT}
          EMAIL_TO: ${EMAIL_TO}
      container_name: jupyter${NAME_SUFFIX}
      restart: no
      environment:
        TZ: ${TZ}
      ports:
        - "8890:8888"
      volumes:
        - ./reports:/home/reports
        - ./csv_backup:/home/csv_backup
        - ./backtests:/home/backtests
        - ./logs/jupyter:/home/logs
      depends_on:
        - ib_gateway
        - mongo_db
      networks:
        trading_net:
          ipv4_address: ${JUPYTER_IPV4_ADDRESS}
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  csv_backup:
      image: pysystemtrade
      depends_on:
        - builder_handler
        - mongo_db
      container_name: csv_backup${NAME_SUFFIX}
      environment:
        TZ: ${TZ}
      networks:
        trading_net:
          ipv4_address: ${CSV_BACKUP_IPV4_ADDRESS}
      volumes:
        - ./csv_backup:/home/csv_backup
      command: sh -c "cd sysproduction/linux/scripts; backup_arctic_to_csv"
      init: true
      logging:
        options:
          max-size: "200k"
          max-file: "1"

  builder_quotes:
      container_name: builder_quotes${NAME_SUFFIX}
      profiles: ["quotes"]
      image: bc-utils
      pull_policy: never
      build:
        context: ./bc_utils
        dockerfile: ./Dockerfile
        args:
          ENVIRONMENT: ${ENVIRONMENT}
          BC_UTILS_REPO_NAME: ${BC_UTILS_REPO_NAME}
          BC_UTILS_REPO_OWNER: ${BC_UTILS_REPO_OWNER}
          BC_UTILS_REPO_ACCESS_TOKEN: ${BC_UTILS_REPO_ACCESS_TOKEN}
          BC_UTILS_REPO_DIR: ${BC_UTILS_REPO_DIR}
          CONFIG_REPO_NAME: ${CONFIG_REPO_NAME}
          CONFIG_REPO_OWNER: ${CONFIG_REPO_OWNER}
          CONFIG_REPO_ACCESS_TOKEN: ${CONFIG_REPO_ACCESS_TOKEN}
          CONFIG_REPO_DIR: ${CONFIG_REPO_DIR}
      restart: no
      entrypoint: ["/bin/sh", "-c", "echo 'Exiting immediately by design: service only provides image build.'; exit 0"]
      logging:
        options:
          max-size: "100k"
          max-file: "1"

  barchart_quotes:
      container_name: barchart_quotes${NAME_SUFFIX}
      profiles: ["quotes"]
      user: "$BC_UTILS_USER"
      restart: no
      image: bc-utils
      pull_policy: never
      volumes:
        - ${BARCHART_MARKET_DATA_PATH}:${BC_UTILS_DATA_DIR}:rw
      networks:
        trading_net:
          ipv4_address: ${BARCHART_QUOTES_IPV4_ADDRESS}
      depends_on:
        - builder_quotes
      environment:
        TZ: ${TZ}
        BARCHART_DOWNLOADER_FACTORY: "create_barchart_downloader"
        BARCHART_USERNAME: ${BARCHART_USERNAME}
        BARCHART_PASSWORD: ${BARCHART_PASSWORD}
        BARCHART_DRY_RUN: "True"
        BARCHART_START_YEAR: "2000"
        BARCHART_END_YEAR: "2025"
        BARCHART_OUTPUT_DIR: "${BC_UTILS_DATA_DIR}"
        BARCHART_DAILY_DOWNLOAD_LIMIT: 200
        BARCHART_RANDOM_SLEEP_IN_SEC: 10
        BARCHART_MARKET_FILES: "${BC_UTILS_REPO_DIR}/configs/barchart.config.json"
        BARCHART_LOGGING_LEVEL: "DEBUG"
        RUN_ON_STARTUP: "True"
        BARCHART_BACKUP_DATA: "True"
        BARCHART_FORCE_BACKUP: "False"
      logging:
        options:
          max-size: "5m"
          max-file: "3"

  yahoo_quotes:
      container_name: yahoo_quotes${NAME_SUFFIX}
      profiles: ["quotes"]
      user: "$BC_UTILS_USER"
      image: bc-utils
      pull_policy: never
      restart: no
      volumes:
        - ${YAHOO_MARKET_DATA_PATH}:${BC_UTILS_DATA_DIR}:rw
      networks:
        trading_net:
          ipv4_address: ${YAHOO_QUOTES_IPV4_ADDRESS}
      depends_on:
        - builder_quotes
      environment:
        TZ: ${TZ}
        BARCHART_DOWNLOADER_FACTORY: "create_yahoo_downloader"
        BARCHART_DRY_RUN: "False"
        BARCHART_START_YEAR: "2000"
        BARCHART_END_YEAR: "2025"
        BARCHART_OUTPUT_DIR: "${BC_UTILS_DATA_DIR}"
        BARCHART_RANDOM_SLEEP_IN_SEC: 1
        BARCHART_MARKET_FILES: "${BC_UTILS_REPO_DIR}/configs/yahoo.config.json"
        BARCHART_LOGGING_LEVEL: "DEBUG"
        RUN_ON_STARTUP: "True"
        BARCHART_BACKUP_DATA: "True"
        BARCHART_FORCE_BACKUP: "False"
      logging:
        options:
          max-size: "5m"
          max-file: "3"

  ibkr_quotes:
      container_name: ibkr_quotes${NAME_SUFFIX}
      profiles: ["quotes"]
      user: "$BC_UTILS_USER"
      image: bc-utils
      pull_policy: never
      restart: no
      depends_on:
        - builder_quotes
        - ib_gateway
      volumes:
        - ${IBKR_MARKET_DATA_PATH}:${BC_UTILS_DATA_DIR}:rw
      networks:
        trading_net:
          ipv4_address: ${IBKR_QUOTES_IPV4_ADDRESS}
      environment:
        TZ: ${TZ}
        BARCHART_DOWNLOADER_FACTORY: "create_ibkr_downloader"
        BARCHART_DRY_RUN: "False"
        BARCHART_START_YEAR: "2000"
        BARCHART_END_YEAR: "2025"
        BARCHART_OUTPUT_DIR: "${BC_UTILS_DATA_DIR}"
        BARCHART_RANDOM_SLEEP_IN_SEC: 10
        BARCHART_MARKET_FILES: "${BC_UTILS_REPO_DIR}/configs/ibkr.config.json"
        BARCHART_LOGGING_LEVEL: "DEBUG"
        RUN_ON_STARTUP: "True"
        BARCHART_BACKUP_DATA: "True"
        BARCHART_FORCE_BACKUP: "False"
        PROVIDER_HOST: ${IB_GATEWAY_IPV4_ADDRESS}
        PROVIDER_PORT: ${IB_GATEWAY_PORT}
      logging:
        options:
          max-size: "5m"
          max-file: "3"

volumes:
  mongo_db:
    name: mongo_db_volume${NAME_SUFFIX}
  mongo_config:
    name: mongo_config_volume${NAME_SUFFIX}
  gateway_jts:
    name: gateway_jts_volume${NAME_SUFFIX}
  parquet_store:
    name: parquet_store_volume${NAME_SUFFIX}
#  build_input:
#    driver: local
#    driver_opts:
#      type: none
#      device: /mnt/share

networks:
  default:
    name: shared_net${NAME_SUFFIX}
  trading_net:
    driver: bridge
    name: trading_net${NAME_SUFFIX}
    ipam:
      config:
        - subnet: ${IPV4_NETWORK_PART}0.0/16
          gateway: ${GATEWAY_IPV4_ADDRESS}


 # Backup concept; https://stackoverflow.com/a/56432886/1020693
 # about profile; https://docs.docker.com/compose/profiles/, https://stackoverflow.com/a/65957695/1020693

